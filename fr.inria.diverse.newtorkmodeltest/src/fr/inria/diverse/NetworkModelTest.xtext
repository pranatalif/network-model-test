grammar fr.inria.diverse.NetworkModelTest with org.eclipse.xtext.common.Terminals

generate networkModelTest "http://www.inria.fr/diverse/NetworkModelTest"

Model:
	(elements+=NodeElement)*
;

NodeElement:
	PackageDeclaration | Import | Type
;

PackageDeclaration:
	'package' name=QualifiedName '{'
		(elements+=NodeElement)*
	'}'
;

QualifiedName:
	ID ('.' ID)*
;

Import:
	'import' importedNameSpace=QualifiedNameWithWildcard
;

QualifiedNameWithWildcard:
	QualifiedName '.*'?
;

Type:
	DataType | Config
;

DataType:
	'datatype' name=ID
;

Config:
	'config' name=ID ('extends' superType=[Config|QualifiedName])? '{'
		(node+=Node)+
		(binding+=Binding)+
	'}'
;

Node:
	nodetype=NodeType name=ID '{'
		('image:' image=STRING)?
		'name:' nodeName=STRING
		'nodeID:' nodeID=STRING
		('eth0.IP:' nodeIP=STRING)?
	'}'
;

NodeType:
	nodetype=('Docker' | 'OVS' | 'EthSwitch' | 'Firefox' | 'UbuntuDesktop' | 'NAT' | 'Cloud')
;

Binding:
	'bind' nodeA=NodeA 'and' nodeB=NodeB 'with' 'linkID:' linkID=STRING
;

LinkID:
	linkID=STRING
;

NodeA:
	name=ID'.'eth=ID
;

NodeB:
	name=ID'.'eth=ID
;