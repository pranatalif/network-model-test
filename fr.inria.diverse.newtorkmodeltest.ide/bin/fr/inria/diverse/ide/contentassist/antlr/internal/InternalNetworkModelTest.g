/*
 * generated by Xtext 2.16.0
 */
grammar InternalNetworkModelTest;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.inria.diverse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.services.NetworkModelTestGrammarAccess;

}
@parser::members {
	private NetworkModelTestGrammarAccess grammarAccess;

	public void setGrammarAccess(NetworkModelTestGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeElement
entryRuleNodeElement
:
{ before(grammarAccess.getNodeElementRule()); }
	 ruleNodeElement
{ after(grammarAccess.getNodeElementRule()); } 
	 EOF 
;

// Rule NodeElement
ruleNodeElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeElementAccess().getAlternatives()); }
		(rule__NodeElement__Alternatives)
		{ after(grammarAccess.getNodeElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfig
entryRuleConfig
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAccess().getGroup()); }
		(rule__Config__Group__0)
		{ after(grammarAccess.getConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeType
entryRuleNodeType
:
{ before(grammarAccess.getNodeTypeRule()); }
	 ruleNodeType
{ after(grammarAccess.getNodeTypeRule()); } 
	 EOF 
;

// Rule NodeType
ruleNodeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeAssignment()); }
		(rule__NodeType__NodetypeAssignment)
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinding
entryRuleBinding
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getGroup()); }
		(rule__Binding__Group__0)
		{ after(grammarAccess.getBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeA
entryRuleNodeA
:
{ before(grammarAccess.getNodeARule()); }
	 ruleNodeA
{ after(grammarAccess.getNodeARule()); } 
	 EOF 
;

// Rule NodeA
ruleNodeA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAAccess().getGroup()); }
		(rule__NodeA__Group__0)
		{ after(grammarAccess.getNodeAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeB
entryRuleNodeB
:
{ before(grammarAccess.getNodeBRule()); }
	 ruleNodeB
{ after(grammarAccess.getNodeBRule()); } 
	 EOF 
;

// Rule NodeB
ruleNodeB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeBAccess().getGroup()); }
		(rule__NodeB__Group__0)
		{ after(grammarAccess.getNodeBAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeElementAccess().getPackageDeclarationParserRuleCall_0()); }
		rulePackageDeclaration
		{ after(grammarAccess.getNodeElementAccess().getPackageDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeElementAccess().getImportParserRuleCall_1()); }
		ruleImport
		{ after(grammarAccess.getNodeElementAccess().getImportParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeElementAccess().getTypeParserRuleCall_2()); }
		ruleType
		{ after(grammarAccess.getNodeElementAccess().getTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getConfigParserRuleCall_1()); }
		ruleConfig
		{ after(grammarAccess.getTypeAccess().getConfigParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__NodetypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeDockerKeyword_0_0()); }
		'Docker'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeDockerKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeOVSKeyword_0_1()); }
		'OVS'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeOVSKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeEthSwitchKeyword_0_2()); }
		'EthSwitch'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeEthSwitchKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeFirefoxKeyword_0_3()); }
		'Firefox'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeFirefoxKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeUbuntuDesktopKeyword_0_4()); }
		'UbuntuDesktop'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeUbuntuDesktopKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeNATKeyword_0_5()); }
		'NAT'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeNATKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeCloudKeyword_0_6()); }
		'Cloud'
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeCloudKeyword_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
	(rule__PackageDeclaration__ElementsAssignment_3)*
	{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNameSpaceAssignment_1()); }
	(rule__Import__ImportedNameSpaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNameSpaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
	'config'
	{ after(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getNameAssignment_1()); }
	(rule__Config__NameAssignment_1)
	{ after(grammarAccess.getConfigAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getGroup_2()); }
	(rule__Config__Group_2__0)?
	{ after(grammarAccess.getConfigAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__3__Impl
	rule__Config__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__4__Impl
	rule__Config__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConfigAccess().getNodeAssignment_4()); }
		(rule__Config__NodeAssignment_4)
		{ after(grammarAccess.getConfigAccess().getNodeAssignment_4()); }
	)
	(
		{ before(grammarAccess.getConfigAccess().getNodeAssignment_4()); }
		(rule__Config__NodeAssignment_4)*
		{ after(grammarAccess.getConfigAccess().getNodeAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__5__Impl
	rule__Config__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConfigAccess().getBindingAssignment_5()); }
		(rule__Config__BindingAssignment_5)
		{ after(grammarAccess.getConfigAccess().getBindingAssignment_5()); }
	)
	(
		{ before(grammarAccess.getConfigAccess().getBindingAssignment_5()); }
		(rule__Config__BindingAssignment_5)*
		{ after(grammarAccess.getConfigAccess().getBindingAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_2__0__Impl
	rule__Config__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getConfigAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getSuperTypeAssignment_2_1()); }
	(rule__Config__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getConfigAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodetypeAssignment_0()); }
	(rule__Node__NodetypeAssignment_0)
	{ after(grammarAccess.getNodeAccess().getNodetypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameAssignment_1()); }
	(rule__Node__NameAssignment_1)
	{ after(grammarAccess.getNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getGroup_3()); }
	(rule__Node__Group_3__0)?
	{ after(grammarAccess.getNodeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
	rule__Node__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNameKeyword_4()); }
	'name:'
	{ after(grammarAccess.getNodeAccess().getNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__5__Impl
	rule__Node__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeNameAssignment_5()); }
	(rule__Node__NodeNameAssignment_5)
	{ after(grammarAccess.getNodeAccess().getNodeNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__6__Impl
	rule__Node__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeIDKeyword_6()); }
	'nodeID:'
	{ after(grammarAccess.getNodeAccess().getNodeIDKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__7__Impl
	rule__Node__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeIDAssignment_7()); }
	(rule__Node__NodeIDAssignment_7)
	{ after(grammarAccess.getNodeAccess().getNodeIDAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__8__Impl
	rule__Node__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getGroup_8()); }
	(rule__Node__Group_8__0)?
	{ after(grammarAccess.getNodeAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3__0__Impl
	rule__Node__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getImageKeyword_3_0()); }
	'image:'
	{ after(grammarAccess.getNodeAccess().getImageKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getImageAssignment_3_1()); }
	(rule__Node__ImageAssignment_3_1)
	{ after(grammarAccess.getNodeAccess().getImageAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_8__0__Impl
	rule__Node__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEth0IPKeyword_8_0()); }
	'eth0.IP:'
	{ after(grammarAccess.getNodeAccess().getEth0IPKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeIPAssignment_8_1()); }
	(rule__Node__NodeIPAssignment_8_1)
	{ after(grammarAccess.getNodeAccess().getNodeIPAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getBindKeyword_0()); }
	'bind'
	{ after(grammarAccess.getBindingAccess().getBindKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getNodeAAssignment_1()); }
	(rule__Binding__NodeAAssignment_1)
	{ after(grammarAccess.getBindingAccess().getNodeAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__2__Impl
	rule__Binding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getAndKeyword_2()); }
	'and'
	{ after(grammarAccess.getBindingAccess().getAndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__3__Impl
	rule__Binding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getNodeBAssignment_3()); }
	(rule__Binding__NodeBAssignment_3)
	{ after(grammarAccess.getBindingAccess().getNodeBAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__4__Impl
	rule__Binding__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getWithKeyword_4()); }
	'with'
	{ after(grammarAccess.getBindingAccess().getWithKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__5__Impl
	rule__Binding__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getLinkIDKeyword_5()); }
	'linkID:'
	{ after(grammarAccess.getBindingAccess().getLinkIDKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getLinkIDAssignment_6()); }
	(rule__Binding__LinkIDAssignment_6)
	{ after(grammarAccess.getBindingAccess().getLinkIDAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeA__Group__0__Impl
	rule__NodeA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAAccess().getNameAssignment_0()); }
	(rule__NodeA__NameAssignment_0)
	{ after(grammarAccess.getNodeAAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeA__Group__1__Impl
	rule__NodeA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getNodeAAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeA__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAAccess().getEthAssignment_2()); }
	(rule__NodeA__EthAssignment_2)
	{ after(grammarAccess.getNodeAAccess().getEthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeB__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeB__Group__0__Impl
	rule__NodeB__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeBAccess().getNameAssignment_0()); }
	(rule__NodeB__NameAssignment_0)
	{ after(grammarAccess.getNodeBAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeB__Group__1__Impl
	rule__NodeB__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeBAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getNodeBAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeB__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeBAccess().getEthAssignment_2()); }
	(rule__NodeB__EthAssignment_2)
	{ after(grammarAccess.getNodeBAccess().getEthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsNodeElementParserRuleCall_0()); }
		ruleNodeElement
		{ after(grammarAccess.getModelAccess().getElementsNodeElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getElementsNodeElementParserRuleCall_3_0()); }
		ruleNodeElement
		{ after(grammarAccess.getPackageDeclarationAccess().getElementsNodeElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNameSpaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNameSpaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNameSpaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getSuperTypeConfigCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getConfigAccess().getSuperTypeConfigQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getConfigAccess().getSuperTypeConfigQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getConfigAccess().getSuperTypeConfigCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__NodeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getNodeNodeParserRuleCall_4_0()); }
		ruleNode
		{ after(grammarAccess.getConfigAccess().getNodeNodeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__BindingAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getBindingBindingParserRuleCall_5_0()); }
		ruleBinding
		{ after(grammarAccess.getConfigAccess().getBindingBindingParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodetypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodetypeNodeTypeParserRuleCall_0_0()); }
		ruleNodeType
		{ after(grammarAccess.getNodeAccess().getNodetypeNodeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ImageAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getImageSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getImageSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeIDAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeIDSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNodeIDSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeIPAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeIPSTRINGTerminalRuleCall_8_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNodeIPSTRINGTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__NodetypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getNodetypeAlternatives_0()); }
		(rule__NodeType__NodetypeAlternatives_0)
		{ after(grammarAccess.getNodeTypeAccess().getNodetypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__NodeAAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getNodeANodeAParserRuleCall_1_0()); }
		ruleNodeA
		{ after(grammarAccess.getBindingAccess().getNodeANodeAParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__NodeBAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getNodeBNodeBParserRuleCall_3_0()); }
		ruleNodeB
		{ after(grammarAccess.getBindingAccess().getNodeBNodeBParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__LinkIDAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getLinkIDSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getBindingAccess().getLinkIDSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeA__EthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAAccess().getEthIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAAccess().getEthIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeBAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeBAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeB__EthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeBAccess().getEthIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeBAccess().getEthIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
